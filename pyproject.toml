[project]
  name = "jorge-menjivar"
  version = "0.1.0"
  description = "Add your description here"
  readme = "README.md"
  requires-python = ">=3.13"
  dependencies = [
    "jinja2>=3.1.6",
    "numpy>=2.3.0",
    "pydantic>=2.11.7",
    "qiskit>=2.1.0",
    "qiskit-aer>=0.17.1",
  ]

[dependency-groups]
  dev = ["basedpyright>=1.29.4", "ruff>=0.12.0"]


[tool.pyright]
  include                   = ["src", "tests"]
  exclude                   = ["**/node_modules", "**/__pycache__"]
  defineConstant            = { DEBUG = true, PYTHONPATH = "src" }
  typeCheckingMode          = "standard"
  reportMissingImports      = "error"
  reportMissingTypeStubs    = "none"
  reportMissingTypeArgument = "error"
  pythonVersion             = "3.13"
  pythonPlatform            = "Linux"
  reportShadowedImports     = true
  reportMissingModuleSource = true
  reportUnusedImport        = true
  executionEnvironments     = [{ root = "tests", extraPaths = ["src"] }]

[tool.yapf]
  based_on_style        = "pep8"
  spaces_before_comment = 2
  indent_width          = 4

[tool.ruff]
  # Same as Black.
  line-length = 88
  target-version = "py313"
  exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
  ]

  [tool.ruff.format]
    # Enable reformatting of code snippets in docstrings.
    docstring-code-format = true

  [tool.ruff.lint]
    # Enable ruff preview features.
    preview = true
    # Allow unused variables when underscore-prefixed.
    dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
    fixable = [
      "ALL",
    ] # Allow autofix for all enabled rules (when `--fix`) is provided.
    unfixable = []
    # Pycodestyle (`E`)
    # Pyflakes (`F`)
    # Pycodestyle warnings (`W`)
    # Import Sorting (`I`)
    # McCabe complexity (`C901`)
    # Type Checking (`TCH`)
    # Naming Conventions (`N`)
    # Pydocstyle (`D`)
    # Pydoclint (`DOC`)
    # Pyupgrade (`UP`)
    # FastAPI (`FAST`)
    # Async (`ASYNC`)
    select = [
      "E",
      "F",
      "W",
      "I",
      "C901",
      "TCH",
      "N",
      "D",
      "DOC",
      "UP",
      "FAST",
      "ASYNC",
      "RUF",
    ]
    ignore = ["N805", "D100", "D101", "D102", "D103", "D104"]
    per-file-ignores = {}

    [tool.ruff.lint.pydoclint]
      # Skip docstrings which fit on a single line.
      ignore-one-line-docstrings = true

    [tool.ruff.lint.pydocstyle]
      convention = "numpy"
